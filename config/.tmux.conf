#setting the delay between prefix and command
set -s escape-time 1

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# Reload the file with Prefix r
bind r source-file ~/.tmux.conf \; display "Tmux Reloaded!"

# Ensure that we can send Ctrl-A to other apps
bind C-a send-prefix

# splitting panes with v and s
bind v split-window -h
bind s split-window -v

# moving between panes with Prefix h,j,k,l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Quick window selection
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Pane resizing panes with Prefix H,J,K,L
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# mouse support - set to on if you want to use the mouse
set -g mouse on

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

# set the status line's colors
set -g status-style fg=white,bg=black

# set the color of the window list
setw -g window-status-style fg=cyan,bg=black

# set colors for the active window
setw -g window-status-current-style fg=colour255,bold,bg=colour1

# colors for pane borders
# setw -g pane-border-style fg=green,bg=black
# setw -g pane-active-border-style fg=white,bg=yellow

# Command / message line
set -g message-style fg=white,bold,bg=black

# Status line right side -  31-Oct 13:37
set -g status-right "#h #[fg=cyan]%d %b %R"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Open new window with current path
bind-key c new-window -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# wrapper for copy
set -g default-command "reattach-to-user-namespace -l $SHELL"

# XXX: Disabled temporary
# Setup 'v' to begin selection as in Vim
# bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

# Copy last command output
# Ref: https://ianthehenry.com/posts/tmux-copy-last-command/
bind -n S-M-Up {
  copy-mode
  send -X clear-selection
  send -X start-of-line
  send -X start-of-line
  send -X cursor-up
  send -X start-of-line
  send -X start-of-line

  # XXX: I can't understand why it fail to recognize with ''*❯\ *' ;(
  if -F "#{m:*❯*,#{copy_cursor_line}}" {
    send -X cursor-left
    send-keys -X cancel
    display "Can't find output of last command."
  } {
    send -X end-of-line
    send -X end-of-line
    send -X begin-selection
    send -X search-backward-text "❯ "
    send -X end-of-line
    send -X end-of-line
    send -X cursor-right
    send -X stop-selection
    send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
    send-keys -X cancel
    display "Copied output of last command."
  }
}
